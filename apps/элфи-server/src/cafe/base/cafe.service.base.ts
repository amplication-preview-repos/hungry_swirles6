/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Cafe as PrismaCafe } from "@prisma/client";

export class CafeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CafeCountArgs, "select">): Promise<number> {
    return this.prisma.cafe.count(args);
  }

  async cafes(args: Prisma.CafeFindManyArgs): Promise<PrismaCafe[]> {
    return this.prisma.cafe.findMany(args);
  }
  async cafe(args: Prisma.CafeFindUniqueArgs): Promise<PrismaCafe | null> {
    return this.prisma.cafe.findUnique(args);
  }
  async createCafe(args: Prisma.CafeCreateArgs): Promise<PrismaCafe> {
    return this.prisma.cafe.create(args);
  }
  async updateCafe(args: Prisma.CafeUpdateArgs): Promise<PrismaCafe> {
    return this.prisma.cafe.update(args);
  }
  async deleteCafe(args: Prisma.CafeDeleteArgs): Promise<PrismaCafe> {
    return this.prisma.cafe.delete(args);
  }
}
